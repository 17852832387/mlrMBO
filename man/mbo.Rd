% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mbo.R
\name{mbo}
\alias{mbo}
\title{Optimizes a function with sequential model based optimization.}
\usage{
mbo(fun, design = NULL, learner, control,
  show.info = getOption("mlrMBO.show.info", TRUE), more.args = list())
}
\arguments{
\item{fun}{[\code{function(x, ...)}]\cr
Fitness function to minimize. The first argument has to be a list of values.
The function has to return a single numerical value.
In fact it is possible to return even more information which will be stored
in the optimization path. To achieve this, simply append the attribute \dQuote{extras}
to the return value of the target function. This has to be a named list of scalar values.
Each of these values will be stored additionally in the optimization path.}

\item{design}{[\code{data.frame} | NULL]\cr
Initial design as data frame.
If the parameters have corresponding trafo functions,
the design must not be transformed before it is passed!
If \code{NULL}, one is constructed from the settings in \code{control}.}

\item{learner}{[\code{\link[mlr]{Learner}}]\cr
Regression learner to model \code{fun}.}

\item{control}{[\code{\link{MBOControl}}]\cr
Control object for mbo.}

\item{show.info}{[\code{logical(1)}]\cr
Verbose output on console?
Default is \code{TRUE}.}

\item{more.args}{[list]\cr
Further arguments passed to fitness function.}
}
\value{
[\code{\link{MBOSingleObjResult}} | \code{\link{MBOMultiObjResult}}]
}
\description{
It is possible to parallelize the evaluation of the target function to speed up the computation.
See \link{mbo_parallel} for further information.
}

